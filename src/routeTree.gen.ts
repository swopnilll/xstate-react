/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ToggleUsingXstateImport } from './routes/toggle/using-xstate'
import { Route as ToggleUsingUsestateImport } from './routes/toggle/using-usestate'
import { Route as ToggleUsingUsereducermachineImport } from './routes/toggle/using-usereducermachine'
import { Route as ToggleUsingUsereducerImport } from './routes/toggle/using-usereducer'
import { Route as TimerUsingReducerMachineImport } from './routes/timer/using-reducer-machine'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ToggleUsingXstateRoute = ToggleUsingXstateImport.update({
  id: '/toggle/using-xstate',
  path: '/toggle/using-xstate',
  getParentRoute: () => rootRoute,
} as any)

const ToggleUsingUsestateRoute = ToggleUsingUsestateImport.update({
  id: '/toggle/using-usestate',
  path: '/toggle/using-usestate',
  getParentRoute: () => rootRoute,
} as any)

const ToggleUsingUsereducermachineRoute =
  ToggleUsingUsereducermachineImport.update({
    id: '/toggle/using-usereducermachine',
    path: '/toggle/using-usereducermachine',
    getParentRoute: () => rootRoute,
  } as any)

const ToggleUsingUsereducerRoute = ToggleUsingUsereducerImport.update({
  id: '/toggle/using-usereducer',
  path: '/toggle/using-usereducer',
  getParentRoute: () => rootRoute,
} as any)

const TimerUsingReducerMachineRoute = TimerUsingReducerMachineImport.update({
  id: '/timer/using-reducer-machine',
  path: '/timer/using-reducer-machine',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/timer/using-reducer-machine': {
      id: '/timer/using-reducer-machine'
      path: '/timer/using-reducer-machine'
      fullPath: '/timer/using-reducer-machine'
      preLoaderRoute: typeof TimerUsingReducerMachineImport
      parentRoute: typeof rootRoute
    }
    '/toggle/using-usereducer': {
      id: '/toggle/using-usereducer'
      path: '/toggle/using-usereducer'
      fullPath: '/toggle/using-usereducer'
      preLoaderRoute: typeof ToggleUsingUsereducerImport
      parentRoute: typeof rootRoute
    }
    '/toggle/using-usereducermachine': {
      id: '/toggle/using-usereducermachine'
      path: '/toggle/using-usereducermachine'
      fullPath: '/toggle/using-usereducermachine'
      preLoaderRoute: typeof ToggleUsingUsereducermachineImport
      parentRoute: typeof rootRoute
    }
    '/toggle/using-usestate': {
      id: '/toggle/using-usestate'
      path: '/toggle/using-usestate'
      fullPath: '/toggle/using-usestate'
      preLoaderRoute: typeof ToggleUsingUsestateImport
      parentRoute: typeof rootRoute
    }
    '/toggle/using-xstate': {
      id: '/toggle/using-xstate'
      path: '/toggle/using-xstate'
      fullPath: '/toggle/using-xstate'
      preLoaderRoute: typeof ToggleUsingXstateImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/timer/using-reducer-machine': typeof TimerUsingReducerMachineRoute
  '/toggle/using-usereducer': typeof ToggleUsingUsereducerRoute
  '/toggle/using-usereducermachine': typeof ToggleUsingUsereducermachineRoute
  '/toggle/using-usestate': typeof ToggleUsingUsestateRoute
  '/toggle/using-xstate': typeof ToggleUsingXstateRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/timer/using-reducer-machine': typeof TimerUsingReducerMachineRoute
  '/toggle/using-usereducer': typeof ToggleUsingUsereducerRoute
  '/toggle/using-usereducermachine': typeof ToggleUsingUsereducermachineRoute
  '/toggle/using-usestate': typeof ToggleUsingUsestateRoute
  '/toggle/using-xstate': typeof ToggleUsingXstateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/timer/using-reducer-machine': typeof TimerUsingReducerMachineRoute
  '/toggle/using-usereducer': typeof ToggleUsingUsereducerRoute
  '/toggle/using-usereducermachine': typeof ToggleUsingUsereducermachineRoute
  '/toggle/using-usestate': typeof ToggleUsingUsestateRoute
  '/toggle/using-xstate': typeof ToggleUsingXstateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/timer/using-reducer-machine'
    | '/toggle/using-usereducer'
    | '/toggle/using-usereducermachine'
    | '/toggle/using-usestate'
    | '/toggle/using-xstate'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/timer/using-reducer-machine'
    | '/toggle/using-usereducer'
    | '/toggle/using-usereducermachine'
    | '/toggle/using-usestate'
    | '/toggle/using-xstate'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/timer/using-reducer-machine'
    | '/toggle/using-usereducer'
    | '/toggle/using-usereducermachine'
    | '/toggle/using-usestate'
    | '/toggle/using-xstate'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  TimerUsingReducerMachineRoute: typeof TimerUsingReducerMachineRoute
  ToggleUsingUsereducerRoute: typeof ToggleUsingUsereducerRoute
  ToggleUsingUsereducermachineRoute: typeof ToggleUsingUsereducermachineRoute
  ToggleUsingUsestateRoute: typeof ToggleUsingUsestateRoute
  ToggleUsingXstateRoute: typeof ToggleUsingXstateRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  TimerUsingReducerMachineRoute: TimerUsingReducerMachineRoute,
  ToggleUsingUsereducerRoute: ToggleUsingUsereducerRoute,
  ToggleUsingUsereducermachineRoute: ToggleUsingUsereducermachineRoute,
  ToggleUsingUsestateRoute: ToggleUsingUsestateRoute,
  ToggleUsingXstateRoute: ToggleUsingXstateRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/timer/using-reducer-machine",
        "/toggle/using-usereducer",
        "/toggle/using-usereducermachine",
        "/toggle/using-usestate",
        "/toggle/using-xstate"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/timer/using-reducer-machine": {
      "filePath": "timer/using-reducer-machine.tsx"
    },
    "/toggle/using-usereducer": {
      "filePath": "toggle/using-usereducer.tsx"
    },
    "/toggle/using-usereducermachine": {
      "filePath": "toggle/using-usereducermachine.tsx"
    },
    "/toggle/using-usestate": {
      "filePath": "toggle/using-usestate.tsx"
    },
    "/toggle/using-xstate": {
      "filePath": "toggle/using-xstate.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
